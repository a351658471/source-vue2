let oldArrayProto = Array.prototype
let newArrayProto = Object.create(oldArrayProto) //åŽŸåž‹ç»§æ‰¿ é˜²æ­¢æ±¡æŸ“
const METHODS = [
    'push',
    'pop',
    'shift',
    'unshift',
    'splice',
    'reverse',
    'sort'
]




METHODS.forEach(methods => {
    newArrayProto[methods] = function(...args){
        const result = oldArrayProto[methods].call(this, ...args)
        console.log("ðŸš€ ~ file: array.js:19 ~ this:", this)
        let inserted
        switch(methods){
            case 'push':
            case 'unshift':
                inserted = args
                break
            case 'splice':
                inserted = args.slice(2)
            default :
                break;
        }
        let ob = this.__ob__
        if(inserted){
            //å¦‚æžœæœ‰æ–°å¢ž åˆ™å¯¹æ”¹æ–°å¢žéƒ¨åˆ†è¿›è¡Œè§‚æµ‹
            
            ob.observeArray(inserted)
        }
        ob.dep.notify()
        return result
    }
})

export {
    newArrayProto
}